# -*- coding: utf-8 -*-
"""Linear_LR.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qgXNLNwZ6yF3aOb7YvmAOoSQnqV3kS5k
"""

from pandas.io.formats import style
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn import metrics
from sklearn.linear_model import LinearRegression
dataset=pd.read_csv('Salary_Data.csv')
#print(dataset.shape)
#dataset.describe()
# dataset.plot(x='YearsExperience',y='Salary',style='*')    # for graph
# plt.title('yeargraph')
# plt.title('YearsExperience')
# plt.title('Salary')
# plt.show()

# reshape can be result as a array with a single column and multiple rows
x=dataset['YearsExperience'].values.reshape(-1,1)
y=dataset['Salary'].values.reshape(-1,1)

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=0)

#algorithm with Linear regression

from sklearn.preprocessing import StandardScaler
sc=StandardScaler()
sc.fit(x_test)
x_train=sc.transform(x_train)
x_test=sc.transform(x_test)
y_train=sc.transform(y_train)
y_test=sc.transform(y_test)

LR=LinearRegression()
LR.fit(x_train,y_train)
print("intercept",LR.intercept_)
print("coefficient",LR.coef_)

y_pred=LR.predict(x_test)
plt.scatter(x_train,y_train)
plt.plot(x_test,y_pred,color='red')
plt.title('simple regression')
plt.title('YearsofExp')
plt.title('Salary')
plt.show()
accuracy=LR.score(x_test,y_test)
print(accuracy)